= Installing Arvados Keep With Authentication and Replication
:Author: Frederick M. Muriithi
:Email: fredmanglis@gmail.com
:Date: 20 June 2017

== Introduction

Arvados Keep is a content-addressable storage system. To quote from https://arvados.org/[Arvados]:

[quote]
----
Keep is a content-addressable storage system for managing and storing large collections of files with durable, cryptographically verifiable references and high-throughput processing. Keep works on a wide range of underyling file systems.
----

The core Arvados system is composed of many parts, but our focus is on using the Keep service, while providing both authentication of users and replication of the content across a variety of servers.

To do this, we require the following parts of the arvados core system:

* The Arvados SSO server
* The Arvados API server
* The Shell server
* The Keepstore server
* The keep-balance

We shall look at each of this parts in the following sections.

== Installation

There are some http://doc.arvados.org/install/install-manual-prerequisites.html[prerequisite steps] to follow before installing any of the various parts. Of particular note is the 'unique identifier', generally referred to as 'uuid_prefix' in the Arvados documentation.

There is also need to http://doc.arvados.org/install/install-postgresql.html[set up the PostgreSQL databases] for both the API server and the SSO server.

Please do so before continuing.

=== Arvados Single Sign-On Server

The _arvados-sso-server_ provides a way to authenticate users and clients before giving the access to the various arvados services.

==== Installing the SSO Server

Please follow http://doc.arvados.org/install/install-sso.html[these instructions] to install and configure the SSO server.

The following are some important configuration options arranged by the default file they are found in:

===== /etc/arvados/sso/application.yml

uuid_prefix::
This is the unique identifier that was generated in the http://doc.arvados.org/install/install-manual-prerequisites.html[prerequisite steps] pointed to above. It is configured in the _/etc/arvados/sso/application.yml_ file.

secret_token::
This token is used by the SSO server to sign cookies. It should be unique to the site, and should be kept secret.

site_title::
The name of the site. This is the name shown to the site visitors to identify the site. It is configured in the _/etc/arvados/sso/application.yml_ file.

default_link_title and default_link_url::
Presented to the user after logging in as the default destination. The title is provided as a clickable hypertext link to the url.

allow_account_registration::
If set to true, the system will allow creation of new user accounts in the SSO's internal database. If set to false, it will not allow creation of new user accounts.

===== /etc/arvados/sso/database.yml

database::
This is the name of the SSO server database name as was set up in the http://doc.arvados.org/install/install-postgresql.html[database setup] process.

username::
The username that has access to the SSO server database

password::
The password that was used while creating the SSO server database

host::
The hostname on which the SSO server database is.

=== Arvados API Server

The API server binds the various parts of the Arvados system. It is used by various clients to access the various Arvados services.

==== Installing the API Server

The process to install and configure the API server is documented http://doc.arvados.org/install/install-api-server.html[here].

The following are some of the most important configurations ordered by the default file where they are:

===== /etc/arvados/api/application.yml

uuid_prefix::
This is the unique identifier that was generated in the http://doc.arvados.org/install/install-manual-prerequisites.html[prerequisite steps] pointed to above.

secret_token::
This token should be unique for each site, and should be secret. It is used by the system to sign cookies. It is recommended that it be at least 50 characters long.

sso_app_secret::
The API server uses this token to authenticate itself to the SSO Server. It is generated when installing the SSO Server.

sso_app_id::
A string value that acts as a sort of id for this server. Make this unique if you can.

sso_provider_url::
This is the uri by which the API server can access the SSO server.

===== /etc/arvados/api/database.yml

database::
This is the name of the API server database name as was set up in the http://doc.arvados.org/install/install-postgresql.html[database setup] process.

username::
The username that has access to the API server database

password::
The password that was used while creating the API server database

host::
The hostname on which the API server database is.

=== The Shell Server

This part provides some utilities useful in configuring and testing the other parts of the system. It also provides the SDK.

Please follow the process http://doc.arvados.org/install/install-shell-server.html[here] to install the shell server.

The shell server does not have much configuration to do.

=== The Keepstore Server

This is the heart of the storage system we are building. It is this component that actually stores the data on whichever volumes it has been configured to use.

==== Installing and Configuring Keepstore

There are 2 ways to install:

With GNU Guix::
  * Clone https://github.com/fredmanglis/guix-arvados[this repository].
  * Set up `GUIX_PACKAGE_PATH` environment variable. For example, if you cloned the repository into the following directory _$HOME/repositories/guix-arvados_ run, `export GUIX_PACKAGE_PATH=$HOME/repositories/guix-arvados`
  * Install: run `guix package --install=arvados-keepstore`
  * Test that keepstore was installed: run `keepstore --help`

According to Arvados Documentation::
Follow http://doc.arvados.org/install/install-keepstore.html[the keepstore installation] process on the Arvados documentation.

===== Configuration

To understand the configuration variables, you can do `keepstore -h` and read the output to understand the variables. The following is an explanation on some of the important ones:

Listen::
The address and port where the keepstore server will listen for incoming connections.

LogFormat::
The form in which the log output from keepstore will be in. The valid values are '"json"' and '"text"'. The format of the requests and responses will also be affected by this setting.

BlobSigningKeyFile::
This is a path to the local file containing the secret key that is used for generating and verifying blobs. It should be the same key as the API server's blob_signing_key.

RequireSignatures::
If set to true, only those read requests that contain a valid signature will receive the content requested in the read request. If the signature is invalid, or no signature is provided, the system responds to the request with 'Forbidden'. If this setting is set to false, then all read requests are allowed. It is thus recommended that this setting be true.

SystemAuthTokenFile::
This is the path to the local file containing the Arvados API token used by 'keep-balance'.

Volumes::
This is a list of the storage volumes that keepstore will use to save data in. If omitted, keepstore will, by default, use all directories named "keep" at the top-level of a mount point at startup. The valid volume types are, Azure, Directory, and S3

=== Keep-balance

Keep-balance provides replication to the saved content. It also handles deletion of blocks. To quote the Arvados documentation:

[quote]
----
Keep-balance deletes unreferenced and overreplicated blocks from Keep servers, makes additional copies of underreplicated blocks, and moves blocks into optimal locations as needed (e.g., after adding new servers).
----

There are two ways to install keep-balance:

With GNU Guix::
  * Clone https://github.com/fredmanglis/guix-arvados[this repository].
  * Set up `GUIX_PACKAGE_PATH` environment variable. For example, if you cloned the repository into the following directory _$HOME/repositories/guix-arvados_ run, `export GUIX_PACKAGE_PATH=$HOME/repositories/guix-arvados`
  * Install: run `guix package --install=arvados-keep-balance`
  * Test that keepstore was installed: run `keep-balance --help`

According to arvados documentation::
  * Follow https://doc.arvados.org/install/install-keep-balance.html[the instructions here]. This page also contains the configuration details for keep-balance.

Keep-balance expects that the API server be served over https, and will complain if it is not. If the certificate of the API server is self-signed, then the 'Insecure' option in the 'Client' section of the configuration needs to be set to `true`.

== Other Useful Components

Two other arvados components may also be useful to set up. They are not mandatory, but may prove useful in some scenarios. These components are Keep-web server and Keep-proxy server.

=== Keep-web Server

Quoting the https://doc.arvados.org/install/install-keep-web.html[keep-web installation page],

[quote]
----
The Keep-web server provides read-only HTTP access to files stored in Keep. It serves public data to unauthenticated clients, and serves private data to clients that supply Arvados API tokens. It can be installed anywhere with access to Keep services, typically behind a web proxy that provides SSL support.
----

Please see the page linked above to install and configure.

=== Keep-proxy Server

This allows clients that are not on the local network to access and use the keepstore servers. See https://doc.arvados.org/install/install-keepproxy.html[this page] to install and configure the Keep-proxy server.

== Repositories

Here is a list of the code repositories for the various parts of the system:

* The SSO Server repository can be found https://github.com/curoverse/sso-devise-omniauth-provider[here].
* The API server, shell server, keepstore, keep-balance are in a single repository https://github.com/curoverse/arvados[here]
